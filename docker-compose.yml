services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - uploads_data:/app/uploads
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=postgis
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - FILE_DRIVER=${FILE_DRIVER}
      - WAIT_HOSTS=postgis:5432,redis:6379
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=5
      - WAIT_HOST_CONNECT_TIMEOUT=30
    depends_on:
      postgis:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgis:
    image: postgis/postgis:latest
    mem_limit: 216M
    cpus: "0.15"
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - '225immo_backend:/var/lib/postgresql/data:rw'
    ports:
      - '${DB_PORT}:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  225immo_backend:
  uploads_data:
